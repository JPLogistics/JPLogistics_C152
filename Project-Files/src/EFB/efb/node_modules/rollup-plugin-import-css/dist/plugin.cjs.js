"use strict";var pluginutils=require("@rollup/pluginutils"),path=require("path");function _interopDefaultLegacy(e){return e&&typeof e=="object"&&"default"in e?e:{default:e}}var path__default=_interopDefaultLegacy(path),index=(e={})=>{var m,c,d;e.transform||(e.transform=r=>r);const f={},y=(m=e.alwaysOutput)!=null?m:!1,O=pluginutils.createFilter((c=e.include)!=null?c:["**/*.css"],(d=e.exclude)!=null?d:[]),p=(r,a,l=new Set)=>{if(l.has(r))return[];l.add(r);const u=[r];return a(r).importedIds.forEach(s=>{u.push(...p(s,a,l))}),u};return{name:"import-css",transform(r,a){if(!O(a))return;const l=e.minify?minifyCSS(e.transform(r)):e.transform(r);return(!f[a]||f[a]!=l)&&(f[a]=l),{code:`export default ${JSON.stringify(l)};`,map:{mappings:""}}},generateBundle(r,a){var l,u;let s={},i=null;for(let t in a)s=Object.assign(s,a[t].modules),i||(i=a[t].facadeModuleId);const g=p(i,this.getModuleInfo),o=Object.entries(f).sort((t,n)=>g.indexOf(t[0])-g.indexOf(n[0])).map(([t,n])=>{if(!s[t])return n}).join(`
`);if(o.trim().length<=0&&!y)return;const h=(u=e.output)!=null?u:(l=r.file)!=null?l:"bundle.js",_=path__default.default.basename(h,path__default.default.extname(h));this.emitFile({type:"asset",fileName:`${_}.css`,source:o})}}};function minifyCSS(e){return e=e.replace(/\/\*(?:(?!\*\/)[\s\S])*\*\/|[\r\n\t]+/g,""),e=e.replace(/ {2,}/g," "),e=e.replace(/ ([{:}]) /g,"$1"),e=e.replace(/([{:}]) /g,"$1"),e=e.replace(/([;,]) /g,"$1"),e=e.replace(/ !/g,"!"),e}module.exports=index;
