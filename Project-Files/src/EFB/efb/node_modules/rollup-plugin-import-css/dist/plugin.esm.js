import{createFilter as _}from"@rollup/pluginutils";import y from"path";var $=(e={})=>{var n,c,p;e.transform||(e.transform=r=>r);const f={},O=(n=e.alwaysOutput)!=null?n:!1,x=_((c=e.include)!=null?c:["**/*.css"],(p=e.exclude)!=null?p:[]),d=(r,l,a=new Set)=>{if(a.has(r))return[];a.add(r);const t=[r];return l(r).importedIds.forEach(u=>{t.push(...d(u,l,a))}),t};return{name:"import-css",transform(r,l){if(!x(l))return;const a=e.minify?b(e.transform(r)):e.transform(r);return(!f[l]||f[l]!=a)&&(f[l]=a),{code:`export default ${JSON.stringify(a)};`,map:{mappings:""}}},generateBundle(r,l){var a,t;let u={},m=null;for(let s in l)u=Object.assign(u,l[s].modules),m||(m=l[s].facadeModuleId);const g=d(m,this.getModuleInfo),o=Object.entries(f).sort((s,i)=>g.indexOf(s[0])-g.indexOf(i[0])).map(([s,i])=>{if(!u[s])return i}).join(`
`);if(o.trim().length<=0&&!O)return;const h=(t=e.output)!=null?t:(a=r.file)!=null?a:"bundle.js",S=y.basename(h,y.extname(h));this.emitFile({type:"asset",fileName:`${S}.css`,source:o})}}};function b(e){return e=e.replace(/\/\*(?:(?!\*\/)[\s\S])*\*\/|[\r\n\t]+/g,""),e=e.replace(/ {2,}/g," "),e=e.replace(/ ([{:}]) /g,"$1"),e=e.replace(/([{:}]) /g,"$1"),e=e.replace(/([;,]) /g,"$1"),e=e.replace(/ !/g,"!"),e}export{$ as default};
