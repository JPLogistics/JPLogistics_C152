{"version":3,"file":"functions.js","sourceRoot":"","sources":["../../../components/functions/functions.tsx"],"names":[],"mappings":"AAAA,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AAEtC,MAAM,UAAU,KAAK,CAAC,KAAU,EAAE,QAAa;IAC7C,OAAO,UAAU,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC7C,CAAC;AACD,MAAM,UAAU,iBAAiB;AAEjC,CAAC;AACD,MAAM,CAAC,KAAK,UAAU,iBAAiB,CAAC,UAAmB;IACzD,IAAI,UAAU,EAAE;QACd,QAAQ,CAAC,OAAO,CAAC,MAAM,GAAG,MAAM,CAAC,cAAc,CAAC,OAAO,EAAE,QAAQ,CAAC,CAAC,OAAO,CACxE,MAAM,EACN,GAAG,CACJ,CAAC;QACF,QAAQ,CAAC,QAAQ,CAAC,WAAW,GAAG,MAAM,CAAC,cAAc,CACnD,mBAAmB,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC,CAAC;QACzD,QAAQ,CAAC,OAAO,CAAC,GAAG,GAAG,MAAM,CAAC,cAAc,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;QAC3D,QAAQ,CAAC,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,cAAc,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC;QAC7D,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,cAAc,CACrD,gCAAgC,EAChC,SAAS,CACV,CAAC;QACF,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,MAAM,CAAC,cAAc,CACtD,iCAAiC,EACjC,SAAS,CACV,CAAC;QACF,QAAQ,CAAC,QAAQ,CAAC,SAAS,CAAC,GAAG,GAAG,MAAM,CAAC,cAAc,CACnD,oBAAoB,GAAG,QAAQ,CAAC,OAAO,CAAC,MAAM,EAC9C,MAAM,CACP,CAAC;KACL;IACD,QAAQ,CAAC,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,MAAM,CAAC,cAAc,CACrD,gCAAgC,EAChC,SAAS,CACV,CAAC;IACF,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,MAAM,CAAC,cAAc,CACtD,iCAAiC,EACjC,SAAS,CACV,CAAC;IACF,QAAQ,CAAC,QAAQ,CAAC,GAAG,GAAG,MAAM,CAAC,cAAc,CAAC,gBAAgB,EAAE,SAAS,CAAC,CAAC;IAC3E,QAAQ,CAAC,QAAQ,CAAC,IAAI,GAAG,MAAM,CAAC,cAAc,CAAC,iBAAiB,EAAE,SAAS,CAAC,CAAC;IAC7E,QAAQ,CAAC,QAAQ,CAAC,OAAO,GAAG,MAAM,CAAC,cAAc,CAAC,eAAe,EAAE,SAAS,CAAC,CAAC;IAC9E,OAAO,IAAI,CAAC;AACd,CAAC","sourcesContent":["import { aircraft } from \"./aircraft\";\r\n\r\nexport function round(value: any, decimals: any) {\r\n  return parseFloat(value).toFixed(decimals);\r\n}\r\nexport function uploadAircraftVar(){\r\n\r\n}\r\nexport async function updateAircraftVar(initialize: Boolean) {\r\n  if (initialize) { \r\n    aircraft.details.livery = SimVar.GetSimVarValue(\"TITLE\", \"string\").replace(\r\n      /\\s+/g,\r\n      \"_\"\r\n    );\r\n    aircraft.settings.stateSaving = SimVar.GetSimVarValue(\r\n      \"JPL152IP_SSONOFF_\" + aircraft.details.livery, \"bool\");\r\n    aircraft.details.reg = SimVar.GetSimVarValue(\"\", \"string\");\r\n    aircraft.details.model = SimVar.GetSimVarValue(\"\", \"string\");\r\n    aircraft.fuel.leftTank.Capacity = SimVar.GetSimVarValue(\r\n      \"A:FUEL TANK LEFT MAIN CAPACITY\",\r\n      \"Gallons\"\r\n    );\r\n    aircraft.fuel.rightTank.Capacity = SimVar.GetSimVarValue(\r\n      \"A:FUEL TANK RIGHT MAIN CAPACITY\",\r\n      \"Gallons\"\r\n    );\r\n    aircraft.settings.equipment.egt = SimVar.GetSimVarValue(\r\n        \"JPL152IP_CLOCKEGT_\" + aircraft.details.livery,\r\n        \"bool\"\r\n      );\r\n  }\r\n  aircraft.fuel.leftTank.Quantity = SimVar.GetSimVarValue(\r\n    \"A:FUEL TANK LEFT MAIN QUANTITY\",\r\n    \"Gallons\"\r\n  );\r\n  aircraft.fuel.rightTank.Quantity = SimVar.GetSimVarValue(\r\n    \"A:FUEL TANK RIGHT MAIN QUANTITY\",\r\n    \"Gallons\"\r\n  ); \r\n  aircraft.location.lat = SimVar.GetSimVarValue(\"PLANE LATITUDE\", \"degrees\");\r\n  aircraft.location.long = SimVar.GetSimVarValue(\"PLANE LONGITUDE\", \"degrees\");\r\n  aircraft.location.heading = SimVar.GetSimVarValue(\"PLANE HEADING\", \"degrees\");\r\n  return true;\r\n}\r\n"]}