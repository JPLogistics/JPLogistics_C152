<ModelBehaviors>
	<Include RelativeFile="Navcomsystem.xml"/>
	
	<!-- #######  -->
	<!-- Presets -->
	
	<!-- ADF AS87 -->
	<Template Name="JPL152_INSTRUMENT_ADF_Template">
		<UseTemplate Name="JPL152_ADF_AS87_Template"/>
	</Template>
	<Template Name="JPL152_ADF_AS87_Template">
		<Parameters Type="Default">
			<ID>1</ID>
		</Parameters>
		<UseTemplate Name="ASOBO_GT_Helper_Suffix_ID_Appender">
			<TEMPLATE_TO_CALL>JPL152_ADF_AS87_SubTemplate</TEMPLATE_TO_CALL>
		</UseTemplate>
	</Template>
	<Template Name="JPL152_ADF_AS87_SubTemplate">
		<Parameters Type="Default">
			<ANIM_LAG>400</ANIM_LAG>
			<EMISSIVE_POTENTIOMETER>1</EMISSIVE_POTENTIOMETER>
			<BUTTON_EMISSIVE_FACTOR>1</BUTTON_EMISSIVE_FACTOR>
			<ANIM_NEVER_FAILS>True</ANIM_NEVER_FAILS>
			<Condition Check="CIRCUIT_ADF">
				<FAILURE>(A:CIRCUIT ON:#CIRCUIT_ADF#, Bool)</FAILURE>
			</Condition>
			<NODE_ID_ADF_VOLUME>ADF_Knob_Volume#SUFFIX_ID#</NODE_ID_ADF_VOLUME>
			<ANIM_NAME_ADF_VOLUME>ADF_Knob_Volume#SUFFIX_ID#</ANIM_NAME_ADF_VOLUME>
			<NODE_ID_PUSH_ADF>ADF_Push_ADF#SUFFIX_ID#</NODE_ID_PUSH_ADF>
			<ANIM_NAME_PUSH_ADF>ADF_Push_ADF#SUFFIX_ID#</ANIM_NAME_PUSH_ADF>
			<NODE_ID_PUSH_BFO>ADF_Push_BFO#SUFFIX_ID#</NODE_ID_PUSH_BFO>
			<ANIM_NAME_PUSH_BFO>ADF_Push_BFO#SUFFIX_ID#</ANIM_NAME_PUSH_BFO>
			<NODE_ID_PUSH_FRQ>ADF_Push_FRQ#SUFFIX_ID#</NODE_ID_PUSH_FRQ>
			<ANIM_NAME_PUSH_FRQ>ADF_Push_FRQ#SUFFIX_ID#</ANIM_NAME_PUSH_FRQ>
			<NODE_ID_PUSH_FLT>ADF_Push_FLT#SUFFIX_ID#</NODE_ID_PUSH_FLT>
			<ANIM_NAME_PUSH_FLT>ADF_Push_FLT#SUFFIX_ID#</ANIM_NAME_PUSH_FLT>
			<NODE_ID_PUSH_SET_RESET>ADF_Push_SetReset#SUFFIX_ID#</NODE_ID_PUSH_SET_RESET>
			<ANIM_NAME_PUSH_SET_RESET>ADF_Push_SetReset#SUFFIX_ID#</ANIM_NAME_PUSH_SET_RESET>
			<NODE_ID_FRAME>ADF_Frame#SUFFIX_ID#</NODE_ID_FRAME>
			<NODE_ID_SCREEN>ADF_Screen</NODE_ID_SCREEN>
			<NODE_ID_100_KHZ>ADF_Knob_Frequency_MHz#SUFFIX_ID#</NODE_ID_100_KHZ>
			<ANIM_NAME_100_KHZ>ADF_Knob_Frequency_MHz#SUFFIX_ID#</ANIM_NAME_100_KHZ>
			<NODE_ID_1_10_KHZ>ADF_Knob_Frequency_KHz#SUFFIX_ID#</NODE_ID_1_10_KHZ>
			<ANIM_NAME_1_10_KHZ>ADF_Knob_Frequency_KHz#SUFFIX_ID#</ANIM_NAME_1_10_KHZ>
			<ANIM_NAME_1_10_KHZ_PUSH>ADF_Knob_Frequency_KHz_Push#SUFFIX_ID#</ANIM_NAME_1_10_KHZ_PUSH>
		</Parameters>
		<UseTemplate Name="ASOBO_Button_ADF_ID_Template">
			<BUTTON_ID>ADF_ANT_MODE_TOGGLE</BUTTON_ID>
			<HTML_EVENT>adf_AntAdf</HTML_EVENT>
			<NODE_ID>#NODE_ID_PUSH_ADF#</NODE_ID>
			<ANIM_NAME>#ANIM_NAME_PUSH_ADF#</ANIM_NAME>
		</UseTemplate>
		<UseTemplate Name="ASOBO_Button_ADF_ID_Template">
			<BUTTON_ID>BFO</BUTTON_ID>
			<HTML_EVENT>adf_bfo</HTML_EVENT>
			<NODE_ID>#NODE_ID_PUSH_BFO#</NODE_ID>
			<ANIM_NAME>#ANIM_NAME_PUSH_BFO#</ANIM_NAME>
		</UseTemplate>
		<UseTemplate Name="ASOBO_Button_ADF_ID_Template">
			<BUTTON_ID>FRQ</BUTTON_ID>
			<HTML_EVENT>adf_frqTransfert</HTML_EVENT>
			<NODE_ID>#NODE_ID_PUSH_FRQ#</NODE_ID>
			<ANIM_NAME>#ANIM_NAME_PUSH_FRQ#</ANIM_NAME>
		</UseTemplate>
		<UseTemplate Name="ASOBO_Button_ADF_ID_Template">
			<BUTTON_ID>FLTET</BUTTON_ID>
			<HTML_EVENT>adf_FltEt</HTML_EVENT>
			<NODE_ID>#NODE_ID_PUSH_FLT#</NODE_ID>
			<ANIM_NAME>#ANIM_NAME_PUSH_FLT#</ANIM_NAME>
		</UseTemplate>
		<UseTemplate Name="ASOBO_Button_ADF_ID_Template">
			<BUTTON_ID>SETRESET</BUTTON_ID>
			<HTML_EVENT>adf_SetRst</HTML_EVENT>
			<NODE_ID>#NODE_ID_PUSH_SET_RESET#</NODE_ID>
			<ANIM_NAME>#ANIM_NAME_PUSH_SET_RESET#</ANIM_NAME>
		</UseTemplate>
		<UseTemplate Name="JPL152_ADF_Knob_Volume_Template">
			<NODE_ID>#NODE_ID_ADF_VOLUME#</NODE_ID>
			<ANIM_NAME>#ANIM_NAME_ADF_VOLUME#</ANIM_NAME>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
			<NODE_ID>#NODE_ID_FRAME#</NODE_ID>
			<EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:#EMISSIVE_POTENTIOMETER#, percent over 100)</EMISSIVE_CODE>
		</UseTemplate>
		<UseTemplate Name="ASOBO_GT_Component_Emissive_Gauge">
			<NODE_ID>#NODE_ID_SCREEN#</NODE_ID>
			<EMISSIVE_CODE>(L:JPL152_TOD, enum) 300 /</EMISSIVE_CODE>
		</UseTemplate>
		<Component ID="ADF_Frequency_Knobs#SUFFIX_ID#">
			<UseTemplate Name="ASOBO_NAVCOM_Alternative_Base_Template">
				<WWISE_EVENT>adf_frequency_knob</WWISE_EVENT>	
				<COUNT>36</COUNT>
				<THRESHOLD_INPUT>0.0005</THRESHOLD_INPUT>
				<THRESHOLD_MOUSE>0.01</THRESHOLD_MOUSE>
				<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
				<TT_DESCRIPTION_ID>@TT_Package.ADF_KNOB_FREQUENCY_PARAM_KHZ_ACTION</TT_DESCRIPTION_ID>
				<TT_DESCRIPTION_INDEX>100</TT_DESCRIPTION_INDEX>
				<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
				<TOOLTIP_TITLE>(A:ADF ACTIVE FREQUENCY:2, khz) 'ADF FREQ (%3.1f)' (F:Format)</TOOLTIP_TITLE>
				<KNOB_ID>ADF_Freq_100_Khz</KNOB_ID>
				<ANIM_NAME>#ANIM_NAME_100_KHZ#</ANIM_NAME>
				<NODE_ID>#NODE_ID_100_KHZ#</NODE_ID>
				<FORMAT_VALUE>'%d' @sprintf</FORMAT_VALUE>
				<GET_TT_VALUE_STATE>(A:ADF ACTIVE FREQUENCY:2, Khz) s0 100 / int 10 % l0 1000 / int 10 % 10 * +</GET_TT_VALUE_STATE>
				<EVENT_CW>(&gt;K:ADF2_100_INC)</EVENT_CW>
				<EVENT_CCW>(&gt;K:ADF2_100_DEC)</EVENT_CCW>
				<IS_INFINITE>True</IS_INFINITE>
			</UseTemplate>
			<Component ID="#NODE_ID_1_10_KHZ#" Node="#NODE_ID_1_10_KHZ#">
				<Parameters Type="Override">
					<BTN_ID_EXTERNAL>ADF_Freq_Increment</BTN_ID_EXTERNAL>
					<VAR_NAME>XMLVAR_ADF_Frequency_10_Khz</VAR_NAME>
					<VAR_TYPE>L</VAR_TYPE>
					<FORMAT_VALUE>'%d' @sprintf</FORMAT_VALUE>
				</Parameters>
				<UseTemplate Name="ASOBO_NAVCOM_Alternative_Base_Push_Event_Only_Template">
					<BTN_ID>#BTN_ID_EXTERNAL#</BTN_ID>
					<GET_STATE_EXTERNAL>(#VAR_TYPE#:#VAR_NAME#) sp0</GET_STATE_EXTERNAL>
					<SIM_STATE_IS_ON_EXTERNAL>l0</SIM_STATE_IS_ON_EXTERNAL>
					<SET_STATE_ON>1 (&gt;#VAR_TYPE#:#VAR_NAME#)</SET_STATE_ON>
					<TT_VALUE_ON>'10 Khz'</TT_VALUE_ON>
					<SET_STATE_OFF>0 (&gt;#VAR_TYPE#:#VAR_NAME#)</SET_STATE_OFF>
					<TT_VALUE_OFF>'1 Khz'</TT_VALUE_OFF>
					<TT_DESCRIPTION_ID>@TT_Package.ADF_KNOB_FREQUENCY_INCREMENT_ACTION</TT_DESCRIPTION_ID>
					<TT_DESCRIPTION_INDEX>100</TT_DESCRIPTION_INDEX>
				</UseTemplate>
				<UseTemplate Name="ASOBO_NAVCOM_Alternative_Base_Template">
					<KNOB_ID>ADF_Freq_1_10_Khz</KNOB_ID>
					<BTN_EXTERNAL_BINDING_TO_CALL>_Toggle</BTN_EXTERNAL_BINDING_TO_CALL>
					<CREATE_COMPONENT>False</CREATE_COMPONENT>
					<WWISE_EVENT>adf_frequency_knob</WWISE_EVENT>	
					<WWISE_EVENT_1>NAVCOM_push_button_on</WWISE_EVENT_1>
					<WWISE_EVENT_2>NAVCOM_push_button_off</WWISE_EVENT_2>
					<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
					<NORMALIZED_TIME_2>0.1</NORMALIZED_TIME_2>
					<COUNT>36</COUNT>
					<THRESHOLD_X_INPUT>0.1</THRESHOLD_X_INPUT>
					<THRESHOLD_X_MOUSE>0.005</THRESHOLD_X_MOUSE>	
					<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
					<NODE_ID>#NODE_ID_1_10_KHZ#</NODE_ID>
					<KNOB_TYPE>Infinite_Pull</KNOB_TYPE>
					<TEMPLATE_VARIANT/>
					<ANIM_CODE>(#VAR_TYPE#:#VAR_NAME#) 100 *</ANIM_CODE>
					<ANIM_NAME_KNOB>#ANIM_NAME_1_10_KHZ#</ANIM_NAME_KNOB>
					<ANIM_NAME_PULL>#ANIM_NAME_1_10_KHZ_PUSH#</ANIM_NAME_PULL>
					<TT_DESCRIPTION_ID>@TT_Package.ADF_KNOB_FREQUENCY_1_10_KHZ_ACTION</TT_DESCRIPTION_ID>
					<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
					<TOOLTIP_TITLE>(A:ADF ACTIVE FREQUENCY:2, khz) 'ADF FREQ (%3.1f)' (F:Format)</TOOLTIP_TITLE>
					<EVENT_CW>(#VAR_TYPE#:#VAR_NAME#) if{ (&gt;K:ADF2_10_INC) } els{ (&gt;K:ADF2_1_INC) }</EVENT_CW>
					<EVENT_CCW>(#VAR_TYPE#:#VAR_NAME#) if{ (&gt;K:ADF2_10_DEC) } els{ (&gt;K:ADF2_1_DEC) }</EVENT_CCW>
					<GET_TT_VALUE_STATE>(A:ADF ACTIVE FREQUENCY:2, Khz) sp0 (#VAR_TYPE#:#VAR_NAME#) if{ l0 10 / int 10 % } els{ l0 int 10 % }</GET_TT_VALUE_STATE>
					<EXTRA_INTERACTION>_LeftSingle</EXTRA_INTERACTION>
					<IS_INFINITE>True</IS_INFINITE>
					<COUNT>36</COUNT>
				</UseTemplate>
			</Component>
		</Component>
	</Template>
	
	<!-- ########## -->
	<!-- Components -->
	
	<Template Name="ASOBO_Button_ADF_ID_Template">
		<Parameters Type="Default">
			<PART_ID>ADF_Push_#BUTTON_ID#</PART_ID>
			<WWISE_EVENT_1>ADF_push_button_on</WWISE_EVENT_1>
			<WWISE_EVENT_2>ADF_push_button_off</WWISE_EVENT_2> 
			<NORMALIZED_TIME_1>0.1</NORMALIZED_TIME_1>
			<NORMALIZED_TIME_2>0.5</NORMALIZED_TIME_2>	
			<TT_DESCRIPTION_ID>@TT_Package.ADF_PUSH_#BUTTON_ID#_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE>@TT_Package.ADF_PUSH_#BUTTON_ID#_TITLE</TOOLTIP_TITLE>
		</Parameters>
		<UseTemplate Name="ASOBO_NAVCOM_Alternative_Base_Template">
			<BTN_ID>ADF_#BUTTON_ID#</BTN_ID>
			<SET_STATE_EXTERNAL>(&gt;H:#HTML_EVENT#)</SET_STATE_EXTERNAL>
			<EMISSIVE_CODE>(A:LIGHT POTENTIOMETER:#EMISSIVE_POTENTIOMETER#, percent over 100) #BUTTON_EMISSIVE_FACTOR# *</EMISSIVE_CODE>		
		</UseTemplate>
	</Template>
	<Template Name="JPL152_ADF_Knob_Volume_Template">
		<Parameters Type="Default">
			<WWISE_EVENT>navcom_volume_knob</WWISE_EVENT>	
			<COUNT>25</COUNT>
			<ANIM_LAG>200</ANIM_LAG>
			<THRESHOLD_INPUT>0.000025</THRESHOLD_INPUT>
			<THRESHOLD_MOUSE>0.0025</THRESHOLD_MOUSE>
		</Parameters>
		<Parameters Type="Override">
			<EVENT_CW>(&gt;K:ADF_VOLUME_INC) (&gt;K:ADF_VOLUME_INC)</EVENT_CW>
			<EVENT_CCW>(&gt;K:ADF_VOLUME_DEC) (&gt;K:ADF_VOLUME_DEC)</EVENT_CCW>
		</Parameters>
		<Parameters Type="Override">
			<Condition NotEmpty="CIRCUIT_ADF">
				<EVENT_CW>#EVENT_CW# (A:ADF VOLUME:1, Percent) 0 &gt; (A:CIRCUIT SWITCH ON:#CIRCUIT_ADF#, Bool) != if{ #CIRCUIT_ADF# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }</EVENT_CW>
				<EVENT_CCW>#EVENT_CCW# (A:ADF VOLUME:1, Percent) 0 &gt; (A:CIRCUIT SWITCH ON:#CIRCUIT_ADF#, Bool) != if{ #CIRCUIT_ADF# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }</EVENT_CCW>
				<COMP_INIT_CODE>(A:ADF VOLUME:1, Percent) 0 == (A:CIRCUIT SWITCH ON:#CIRCUIT_ADF#, Bool) and if{ #CIRCUIT_ADF# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE) }</COMP_INIT_CODE>
			</Condition>
		</Parameters>
		<Parameters Type="Default">
			<TT_DESCRIPTION_ID>@TT_Package.ADF_KNOB_RECEIVERVOLUME_ACTION</TT_DESCRIPTION_ID>
			<TOOLTIP_TITLE_IS_DYNAMIC>True</TOOLTIP_TITLE_IS_DYNAMIC>
			<TOOLTIP_TITLE>(A:ADF VOLUME:1, Percent) 'ADF VOLUME (%d)' (F:Format)</TOOLTIP_TITLE>
		</Parameters>
		<UseTemplate Name="ASOBO_NAVCOM_Alternative_Base_Template">
			<KNOB_ID>ADF_Volume</KNOB_ID>
			<GET_TT_VALUE_STATE>(A:ADF VOLUME:1, percent)</GET_TT_VALUE_STATE>
			<ANIM_CODE>(A:ADF VOLUME:1, percent)</ANIM_CODE>
			<IS_INFINITE>False</IS_INFINITE>
			<INTERACTION_TYPE>Knob</INTERACTION_TYPE>
		</UseTemplate>
		<Update Frequency = "3">
			(A:ADF VOLUME:1, Percent) 0 &gt;
			(A:CIRCUIT SWITCH ON:#CIRCUIT_ADF#, Boolean) ! and if{
				#CIRCUIT_ADF# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
			}
			(A:ADF VOLUME:1, Percent) 0 ==
			(A:CIRCUIT SWITCH ON:#CIRCUIT_ADF#, Boolean) and if{
				#CIRCUIT_ADF# (&gt;K:ELECTRICAL_CIRCUIT_TOGGLE)
			}
		</Update>
	</Template>

<Template Name="JPL152_INSTRUMENT_Needle_ADF_Template">
	<Parameters Type="Default">
		<ID>1</ID>
	</Parameters>
	<UseTemplate Name="ASOBO_GT_Helper_Suffix_ID_Appender">
		<TEMPLATE_TO_CALL>JPL152_INSTRUMENT_Needle_ADF_SubTemplate</TEMPLATE_TO_CALL>
	</UseTemplate>
</Template>

<Template Name="JPL152_INSTRUMENT_Needle_ADF_SubTemplate">
	<DefaultTemplateParameters>
		<KNOB_ANIM_NAME>INSTRUMENT_ADF_Knob#SUFFIX_ID#</KNOB_ANIM_NAME>
		<KNOB_NODE_ID>INSTRUMENT_ADF_Knob#SUFFIX_ID#</KNOB_NODE_ID>
		<NEEDLE_ANIM_NAME>INSTRUMENT_ADF_Needle#SUFFIX_ID#</KNOB_ANIM_NAME>
		<NEEDLE_NODE_ID>INSTRUMENT_ADF_Needle#SUFFIX_ID#</KNOB_NODE_ID>
		<CYLINDER_ANIM_NAME>INSTRUMENT_ADF_Dial#SUFFIX_ID#</CYLINDER_ANIM_NAME>
		<CYLINDER_NODE_ID>INSTRUMENT_ADF_Dial#SUFFIX_ID#</CYLINDER_NODE_ID>
		<PART_ID>INSTRUMENT_ADF</PART_ID>
	</DefaultTemplateParameters>
	<EditableTemplateParameters>
		<AddParams>
			<KNOB_ANIM_NAME></KNOB_ANIM_NAME>
			<KNOB_NODE_ID></KNOB_NODE_ID>
			<CYLINDER_ANIM_NAME></CYLINDER_ANIM_NAME>
			<CYLINDER_NODE_ID></CYLINDER_NODE_ID>
			<HIGHLIGHT_NODE_ID></HIGHLIGHT_NODE_ID>
		</AddParams>
		<AddOptions>
			<ADF_KNOB></ADF_KNOB>
		</AddOptions>
		<RemoveParams>
			<ANIM_NAME></ANIM_NAME>
			<NODE_ID></NODE_ID>
		</RemoveParams>
	</EditableTemplateParameters>

	<Component ID="INSTRUMENT_Needle_ADF">
		<Component ID="#CYLINDER_ANIM_NAME#" Node="#CYLINDER_NODE_ID#">	
			<!--
			<UseTemplate Name="ASOBO_GT_Anim_Sim">
				<ANIM_NAME>#CYLINDER_ANIM_NAME#</ANIM_NAME>
				<ANIM_LENGTH>360</ANIM_LENGTH>
				<ANIM_WRAP>TRUE</ANIM_WRAP>
				<ANIM_SIMVAR>ADF CARD</ANIM_SIMVAR>
				<ANIM_SIMVAR_UNITS>degrees</ANIM_SIMVAR_UNITS>
				<!-- [0, 360] --
				<Condition Check="HIGHLIGHT_NODE_ID">
					<PART_ID/>
				</Condition>
				<ANIM_WRAP>True</ANIM_WRAP>
			</UseTemplate>
			-->
			<UseTemplate Name="ASOBO_GT_Anim_Code">
				<ANIM_NAME>#CYLINDER_ANIM_NAME#</ANIM_NAME>
				<ANIM_LENGTH>360</ANIM_LENGTH>
				<ANIM_WRAP>TRUE</ANIM_WRAP>
				<ANIM_LAG>50</ANIM_LAG>
				<ANIM_CODE>
					(A:PLANE HEADING DEGREES GYRO, degrees) (L:XMLVAR_ADF_CARD_VARIANCE, enum) + (&gt;L:XMLVAR_ADF_CARD_POSITION, degrees) dnor
					(L:XMLVAR_ADF_CARD_POSITION, degrees)
				</ANIM_CODE>
				<Condition Check="HIGHLIGHT_NODE_ID">
					<PART_ID/>
				</Condition>
				<ANIM_WRAP>True</ANIM_WRAP>
			</UseTemplate>
			<Update Frequency="1">
				(A:PLANE BANK DEGREES, radians) 0.5 &gt; if{
					(L:XMLVAR_ADF_CARD_VARIANCE, enum) (A:PLANE BANK DEGREES, radians) 2 * near + -- (&gt;L:XMLVAR_ADF_CARD_VARIANCE, enum)
				}

				(A:PLANE BANK DEGREES, radians) -0.5 &lt; if{
					(L:XMLVAR_ADF_CARD_VARIANCE, enum) (A:PLANE BANK DEGREES, radians) 2 * near + ++ (&gt;L:XMLVAR_ADF_CARD_VARIANCE, enum)
				}
			</Update>
		</Component>
		<Component ID="#NEEDLE_ANIM_NAME#" Node="#NEEDLE_NODE_ID#">			
			<UseTemplate Name="ASOBO_GT_Anim_Code">						
				<ANIM_NAME>#NEEDLE_ANIM_NAME#</ANIM_NAME>			
				<ANIM_LENGTH>360</ANIM_LENGTH>
				<ANIM_LAG>300</ANIM_LAG>
				<ANIM_WRAP>True</ANIM_WRAP>
				<ANIM_CODE>		
					(* Default is current needle position *)
					(L:XMLVAR_ADF_NEEDLE_POSITION, degrees)		
					
					(A:ADF VOLUME:1, Percent) 0 != (A:CIRCUIT ON:37, Bool) and if{
						(L:XMLVAR_ADF_MODE_SEL) 0 == if{																	
							(* BFO *)
							(* Sense Antenna only *)
							(* Needle remains in current position *)
						}
							els{							
								(L:XMLVAR_ADF_MODE_SEL) 2 == (A:ADF SIGNAL:1, number) 0 &gt; and if{														
									(*ADF and NDB signal received *)
									(* Sense and Loop Antenna active *)
									(* Needle position updated to point towards NDB *)
									
									(E:TIME OF DAY, enum) 2 == (E:TIME OF DAY, enum) 0 == or if{
										(A:ADF RADIAL:#ID#, degrees) 180 + (O:JPL152_ADF_DEVIATION) (O:JPL152_ADF_DEVIATION2) * + (&gt;L:XMLVAR_ADF_NEEDLE_POSITION, degrees)
										(L:XMLVAR_ADF_NEEDLE_POSITION, degrees)
									} els{
										(A:ADF RADIAL:#ID#, degrees) 180 + (O:JPL152_ADF_DEVIATION2) + (&gt;L:XMLVAR_ADF_NEEDLE_POSITION, degrees)
										(L:XMLVAR_ADF_NEEDLE_POSITION, degrees)
										}
								}								
								els{							
									(L:XMLVAR_ADF_MODE_SEL) 3 == if{
										(* TEST *)
										(* Needle position slewed in clockwise direction *)
										
										270 (&gt;L:XMLVAR_ADF_NEEDLE_POSITION, degrees)	
									}
								}
							}											
					}
				</ANIM_CODE>			
				<Condition Check="FAILURE_NEEDLE">
					<FAILURE>#FAILURE_NEEDLE#</FAILURE>
				</Condition>
				<!-- [0, 360] -->
				<Condition Check="HIGHLIGHT_NODE_ID">
					<PART_ID/>
				</Condition>
			</UseTemplate>
			<Update Frequency="10">rand rand neg + 20 * (&gt;O:JPL152_ADF_DEVIATION)</Update>
			<Update Frequency="10">
				(A:ADF SIGNAL:1, enum) 1000 &lt; if{
					1250 (A:ADF SIGNAL:1, enum) - 60 / (&gt;O:JPL152_ADF_FALLOFF)
					rand rand neg + (O:JPL152_ADF_FALLOFF) * (&gt;O:JPL152_ADF_DEVIATION2)
				}
			</Update>
		</Component>
		<Condition Check="ADF_KNOB">
			<Component ID="#KNOB_NODE_ID#" Node="#KNOB_NODE_ID#">
				<UseTemplate Name = "ASOBO_GT_Knob_Infinite">
					<ANIM_NAME>#KNOB_ANIM_NAME#</ANIM_NAME>
					<CLOCKWISE_CODE>
						(L:XMLVAR_ADF_CARD_ADJUST, enum) ++ 100 % (&gt;L:XMLVAR_ADF_CARD_ADJUST, enum)
						(L:XMLVAR_ADF_CARD_VARIANCE, enum) 1 + (&gt;L:XMLVAR_ADF_CARD_VARIANCE, enum)
					</CLOCKWISE_CODE>
					<ANTICLOCKWISE_CODE>
						(L:XMLVAR_ADF_CARD_ADJUST, enum) -- (&gt;L:XMLVAR_ADF_CARD_ADJUST, enum) (L:XMLVAR_ADF_CARD_ADJUST, enum) 0 &lt; if{ 99 (&gt;L:XMLVAR_ADF_CARD_ADJUST, enum) }
						(L:XMLVAR_ADF_CARD_VARIANCE, enum) 1 - (&gt;L:XMLVAR_ADF_CARD_VARIANCE, enum)
					</ANTICLOCKWISE_CODE>
					<ARROW_TYPE>Curved</ARROW_TYPE>
				</UseTemplate>
			</Component>
		</Condition>
		<Condition Check="HIGHLIGHT_NODE_ID">
			<UseTemplate Name="ASOBO_GT_Highlight_Template">
			</UseTemplate>
		</Condition>
	</Component>
</Template>
</ModelBehaviors>