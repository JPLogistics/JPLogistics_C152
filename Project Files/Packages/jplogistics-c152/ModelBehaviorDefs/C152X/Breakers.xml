

<Template Name="JPL152_ELECTRICAL_Switch_Breaker_Template">
	<DefaultTemplateParameters>
		<WWISE_EVENT_1>beacon_light_switch_on</WWISE_EVENT_1>
		<WWISE_EVENT_2>beacon_light_switch_off</WWISE_EVENT_2>
	</DefaultTemplateParameters>
	<Component ID="#NODE_ID#" Node="#NODE_ID#">
		<UseTemplate Name="ASOBO_GT_Switch_Code">
			<INVERT_ANIM>TRUE</INVERT_ANIM>
			<ANIM_CODE>(A:BUS CONNECTION ON:#BUS_INDEX#, Bool) 100 *</ANIM_CODE>
			<LEFT_SINGLE_CODE>
				#BUS_INDEX# #BATTERY_BUS_INDEX# (&gt;K:2:ELECTRICAL_BUS_TO_BUS_CONNECTION_TOGGLE)
			</LEFT_SINGLE_CODE>
		</UseTemplate>
	</Component>	
</Template>
	
<Template Name = "JPL152_ALTERNATOR_Breaker">
	<UseTemplate Name = "JPL152_2way_switch_xml">
		<ANIMTIP_0></ANIMTIP_0>
		<ANIMTIP_1></ANIMTIP_1>
		<WWISE_EVENT_1>audio_switch_intercom</WWISE_EVENT_1>
		<WWISE_EVENT_2>audio_switch_intercom</WWISE_EVENT_2>
		<SWITCH_POSITION_TYPE>L</SWITCH_POSITION_TYPE>
		<SWITCH_POSITION_VAR>JPL152_ALT_BREAKER</SWITCH_POSITION_VAR>
		<LEFT_SINGLE_CODE>
			(#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#) ! (&gt;#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#)
		</LEFT_SINGLE_CODE>
	</UseTemplate>
	<Update>
		(L:JPL152_ALT_BREAKER) 1 == (A:ALTERNATOR CONNECTION ON:1, Bool) 1 == and
		if{
			1 (&gt;K:ELECTRICAL_ALTERNATOR_BREAKER_TOGGLE)
		}
		(L:JPL152_ALT_BREAKER) 0 == (A:ALTERNATOR CONNECTION ON:1, Bool) 0 == and
		if{
			1 (&gt;K:ELECTRICAL_ALTERNATOR_BREAKER_TOGGLE)
		}
	</Update>
</Template>

<Template Name = "JPL152_2way_switch_xml">
  <DefaultTemplateParameters>
    <INIT_VALUE>0</INIT_VALUE>
    <ANIMREF_ID>0</ANIMREF_ID>
    <ANIMTIP_0_ON_PERCENT>0</ANIMTIP_0_ON_PERCENT>
    <ANIMTIP_1_ON_PERCENT>1</ANIMTIP_1_ON_PERCENT>
  </DefaultTemplateParameters>
  <Component ID="#NODE_ID#" Node="#NODE_ID#">
    <Update Once="True">
      #INIT_VALUE# (&gt;#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#)
    </Update>
    <UseTemplate Name = "ASOBO_GT_Anim_Code">
      <ANIM_CODE>(#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#) 100 *</ANIM_CODE>
    </UseTemplate>
    <UseTemplate Name = "ASOBO_GT_AnimTriggers_2SoundEvents">
    </UseTemplate>
    <UseTemplate Name = "ASOBO_GT_Interaction_LeftSingle_Code">
      <LEFT_SINGLE_CODE>
        (#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#) ! (&gt;#SWITCH_POSITION_TYPE#:#SWITCH_POSITION_VAR#)
        #LEFT_SINGLE_CODE#
      </LEFT_SINGLE_CODE>
    </UseTemplate>
  </Component>
</Template>


<!--### BREAKER FAILURES ###-->

<Macro Name="Wind"> (A:RELATIVE WIND VELOCITY BODY Z, knots) 14 /</Macro>
<Template Name="Breaker_Trip"> <!-- TODO CHANGE TIMINGS -->
	<Update Frequency="1">
		(A:CIRCUIT PITOT HEAT ON, bool) 1 ==
		if{
			(O:JPL152_PITOT_TIME) 1500 &lt; if{ (O:JPL152_PITOT_TIME) 5 + (&gt;O:JPL152_PITOT_TIME) }
			(O:JPL152_PITOT_TIME) 1500 &lt; (O:JPL152_PITOT_TIME) 0 &gt; and if{ (O:JPL152_PITOT_TIME) @wind - (&gt;O:JPL152_PITOT_TIME) }
		}
		(A:CIRCUIT PITOT HEAT ON, bool) 0 ==
		if{
			(O:JPL152_PITOT_TIME) 0 &gt; if{ (O:JPL152_PITOT_TIME) @wind - 1 - (&gt;O:JPL152_PITOT_TIME) }
		}
	</Update>
	<Update Frequency="0.2">
		(O:JPL152_PITOT_TIME) 1500 &gt; 
		(A:CIRCUIT PITOT HEAT ON, bool) 1 == and
		(A:AMBIENT TEMPERATURE, celsius) 8 &gt; and
		if{ 
			0 (&gt;A:BUS CONNECTION ON:4, bool)
		}
	</Update>

	<!-- random failure -->

	<!-- prototype
		0.14 0.15 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) ! and
			if{ 
				0 (&gt;A:BUS CONNECTION ON:3, bool)
				1 (&gt;L:JPL152_RANDOM_BREAKER2)
			}
		0.2 0.3 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) and
			if{
				0 (&gt;A:BUS CONNECTION ON:3, bool)
				1 (&gt;L:JPL152_RANDOM_BREAKER3)
			}
		(L:JPL152_RANDOM_BREAKER) 0.5 &gt; (L:JPL152_RANDOM_BREAKER3) and
			if{ 
				0 (&gt;A:BUS CONNECTION ON:3, bool)
			}
		-->
		<!--(O:JPL152_RANDOM_BREAKER) 0.14 &gt; (O:JPL152_RANDOM_BREAKER) 0.15 &lt; and (L:JPL152_RANDOM_BREAKER2) ! and-->
	<Update Frequency="1">rand (&gt;L:JPL152_RANDOM_BREAKER)</Update>
	<!--14525 14526-->
	<Update Frequency="1">
		(A:ELECTRICAL MASTER BATTERY:1) if{
			0.145255 0.145256 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) ! and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:3, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER2)
				}
			0.14525 0.14526 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) and (A:BUS CONNECTION ON:3, bool) and
				if{
					0 (&gt;A:BUS CONNECTION ON:3, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER3)
				}
			(L:JPL152_RANDOM_BREAKER) 0.5 &gt; (L:JPL152_RANDOM_BREAKER3) and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:3, bool)
				}

			0.725555 0.725556 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) ! and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:5, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER2)
				}
			0.72555 0.72556 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) and (A:BUS CONNECTION ON:5, bool) and
				if{
					0 (&gt;A:BUS CONNECTION ON:5, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER3)
				}
			(L:JPL152_RANDOM_BREAKER) 0.5 &gt; (L:JPL152_RANDOM_BREAKER3) and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:5, bool)
				}

			0.178433 0.178434 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) ! and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:6, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER2)
				}
			0.17843 0.17844 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) and (A:BUS CONNECTION ON:6, bool) and
				if{
					0 (&gt;A:BUS CONNECTION ON:6, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER3)
				}
			(L:JPL152_RANDOM_BREAKER) 0.5 &gt; (L:JPL152_RANDOM_BREAKER3) and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:6, bool)
				}

			0.530877 0.530878 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) ! and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:7, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER2)
				}
			0.53087 0.53088 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) and (A:BUS CONNECTION ON:7, bool) and
				if{
					0 (&gt;A:BUS CONNECTION ON:7, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER3)
				}
			(L:JPL152_RANDOM_BREAKER) 0.5 &gt; (L:JPL152_RANDOM_BREAKER3) and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:7, bool)
				}

			0.253822 0.253823 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) ! and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:8, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER2)
				}
			0.25382 0.25383 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) and (A:BUS CONNECTION ON:8, bool) and
				if{
					0 (&gt;A:BUS CONNECTION ON:8, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER3)
				}
			(L:JPL152_RANDOM_BREAKER) 0.5 &gt; (L:JPL152_RANDOM_BREAKER3) and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:8, bool)
				}

			0.936544 0.936545 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) ! and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:9, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER2)
				}
			0.93654 0.93655 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) and (A:BUS CONNECTION ON:9, bool) and
				if{
					0 (&gt;A:BUS CONNECTION ON:9, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER3)
				}
			(L:JPL152_RANDOM_BREAKER) 0.5 &gt; (L:JPL152_RANDOM_BREAKER3) and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:9, bool)
				}

			0.364855 0.364856 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) ! and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:10, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER2)
				}
			0.36485 0.36486 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) and (A:BUS CONNECTION ON:10, bool) and
				if{
					0 (&gt;A:BUS CONNECTION ON:10, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER3)
				}
			(L:JPL152_RANDOM_BREAKER) 0.5 &gt; (L:JPL152_RANDOM_BREAKER3) and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:10, bool)
				}

			0.472322 0.472323 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) ! and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:11, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER2)
				}
			0.47232 0.47233 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) and (A:BUS CONNECTION ON:11, bool) and
				if{
					0 (&gt;A:BUS CONNECTION ON:11, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER3)
				}
			(L:JPL152_RANDOM_BREAKER) 0.5 &gt; (L:JPL152_RANDOM_BREAKER3) and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:11, bool)
				}

			0.615311 0.615312 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) ! and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:12, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER2)
				}
			0.61531 0.61532 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) and (A:BUS CONNECTION ON:12, bool) and
				if{
					0 (&gt;A:BUS CONNECTION ON:12, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER3)
				}
			(L:JPL152_RANDOM_BREAKER) 0.5 &gt; (L:JPL152_RANDOM_BREAKER3) and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:12, bool)
				}

			0.869201 0.869202 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) ! and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:13, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER2)
				}
			0.86920 0.86921 (L:JPL152_RANDOM_BREAKER) rng (L:JPL152_RANDOM_BREAKER2) and (A:BUS CONNECTION ON:13, bool) and
				if{
					0 (&gt;A:BUS CONNECTION ON:13, bool) 1 (&gt;L:JPL152_RANDOM_BREAKER3)
				}
			(L:JPL152_RANDOM_BREAKER) 0.5 &gt; (L:JPL152_RANDOM_BREAKER3) and
				if{ 
					0 (&gt;A:BUS CONNECTION ON:13, bool)
				}
		}
	</Update>
		<!--
		(O:JPL152_RANDOM_BREAKER) 0.72555 &gt; (O:JPL152_RANDOM_BREAKER) 0.72556 &lt; and
		if{ 0 (&gt;A:BUS CONNECTION ON:5, bool) }
		(O:JPL152_RANDOM_BREAKER) 0.17843 &gt; (O:JPL152_RANDOM_BREAKER) 0.17844 &lt; and
		if{ 0 (&gt;A:BUS CONNECTION ON:6, bool) }
		(O:JPL152_RANDOM_BREAKER) 0.53087 &gt; (O:JPL152_RANDOM_BREAKER) 0.53088 &lt; and
		if{ 0 (&gt;A:BUS CONNECTION ON:7, bool) }
		(O:JPL152_RANDOM_BREAKER) 0.25382 &gt; (O:JPL152_RANDOM_BREAKER) 0.25383 &lt; and
		if{ 0 (&gt;A:BUS CONNECTION ON:8, bool) }
		(O:JPL152_RANDOM_BREAKER) 0.93654 &gt; (O:JPL152_RANDOM_BREAKER) 0.93655 &lt; and
		if{ 0 (&gt;A:BUS CONNECTION ON:9, bool) }
		(O:JPL152_RANDOM_BREAKER) 0.36485 &gt; (O:JPL152_RANDOM_BREAKER) 0.36486 &lt; and
		if{ 0 (&gt;A:BUS CONNECTION ON:10, bool) }
		(O:JPL152_RANDOM_BREAKER) 0.47232 &gt; (O:JPL152_RANDOM_BREAKER) 0.47233 &lt; and
		if{ 0 (&gt;A:BUS CONNECTION ON:11, bool) }
		(O:JPL152_RANDOM_BREAKER) 0.61531 &gt; (O:JPL152_RANDOM_BREAKER) 0.61532 &lt; and
		if{ 0 (&gt;A:BUS CONNECTION ON:12, bool) }
		(O:JPL152_RANDOM_BREAKER) 0.86920 &gt; (O:JPL152_RANDOM_BREAKER) 0.86921 &lt; and
		if{ 0 (&gt;A:BUS CONNECTION ON:13, bool) }
		-->
	
</Template>
